export interface TradeSecurity {
     /**
     * ID актива 4 - буквы. Например ASTR
     */
    id: string;
    /**
     * Имя актива. Например Астралинукс.
     */
    name: String;
    /**
     * Коэффициент шагов сделок.
     */
    stepCof: number;
    /**
     * Ступени сделок между коэффициентом шагов сделок.
     */
    defaultStep: number,
    /**
     * Разрешение актива. Минимальный шаг торговли. Например актив торгуется с
     * шагом 0.05.
     */
    precision: number,
    /**
     * Точность актива, количество знаков после запятой.
     */
    accuracy: number,
    /**
     * Точность валюты, в которой торгует актив, количество знаков после
     * запятой.
     */
    accuracyCurrency: number,
    /**
     * Минимальный объем сделки - количество активов.
     */
    minVolume: number;
    /**
     * Маржа.
     */
    margin: number;
    /**
     * Максимальное количество акций для торговли.
     */
    maxApplicationsVolumes: number;
    /**
     * Сделки.
     */
    trades: Trades;
}

export interface Trades {
    /**
     * Сделки вниз.
     */

    // List<Application> downApplication;
    downApplication: Application[];
    /**
     * Сделки вверх.
     */
    upApplication: Application[];
    /**
     * Совершённые сделки.
     */
    history: Application[];
}

// Статусы заявок.
export enum AppStatus {
    /**
     * 1. Планируемая заявка. Нужна для планирования. На рынке с ней не
     * выполняется никаких манипуляций.
     */
    Planned,
    /**
     * 2. Заявка открыта. Т.е. выставлена сделка на открытие на рынке.
     * Ждем исполнения.
     */
    ToOpen,
    /**
     * 3. Заявка открыта. Дальнейшие действия на рынке еще не предпринимались.
     */
    Opened,
    /**
     * 4. Заявка выставлена на закрытие. На рынке ожидается ее закрытие.
     */
    ToClose,
    /**
     * 5. Заявка на рынке закрыта.
     */
    Closed,
    /**
     * 6. Подсчет прибыли. Компенсации. Перевод в историю.
     */
    Result
}

export interface Application
{
    /**
     * Порядок сделок при отображении. Фактический определяется по ближайшей
     * сделке.
     */
    order: number;

    /**
     * Статус заявки.
     */
    status: AppStatus;

    /**
     * Покупка стартовая.
     */
    byStart: number;

    /**
     * Покупка по факту.
     */
    byFact: number | null;

    /**
     * Дата покупки. Если игра вверх, то дата открытия сделки. Если игра вниз,
     * дата закрытия сделки.
     */
    byDate: Date | null;

    /**
     * Запланированая сумма покупки.
     */
    byPlanned: number;

    /**
     * Объем ценных бумаг.
     */
    volume: number;

    /**
     * Разница между покупкой и продажой по плану.
     */
    diff: number;

    /**
     * Делитель шага покупки ценной бумаги от предыдущей совершенной сделки.
     */
    precisionForSchedule: number;

    /**
     * Продажа запланированая.
     */
    shellPlanned: number;

    /**
     * Дата продажи. Если сделка вверх - то закрытия. Если сделка вниз то
     * открытия.
     */
    shellDate: Date | null;

    /**
     * Продажа по факту.
     */
    shellFact: number | null;

    /**
     * Продажа стартовая (заявка).
     */
    shellStart: number;

    /**
     * Компенсация для быстрого закрытия сделки.
     */
    compensation: number | null;

    /**
     * Прибыль.
     */
    profit: number;

    /**
     * Часть от прыбили направляем на компенсацию других сделок.
     */
    profitCompensation: number;

    /**
     * Комментарии.
     */
    comment: string | null;
}
